---
name: CI
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
env:
  # renovate: datasource=github-releases depName=golangci/golangci-lint versioning=semver-coerced
  GOLANGCI_LINT_VERSION: "v2.2.2"
  IMAGE: "ghcr.io/${{ github.repository }}"
  REGISTRY: "ghcr.io"
  TEST_TAG: "ghcr.io/${{ github.repository }}:test"
permissions:
  contents: read
jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: '0' # Required for go-header check to know correct mtime of files
      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5
      - name: Set up Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5
        with:
          go-version-file: 'go.mod'
      - name: Run pre-commit
        uses: pre-commit/action@2c7b3805fd2a0fd8c1884dcaebf91fc102a13ecd # v3.0.1
        env:
          SKIP: golangci-lint-full
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@4afd733a84b1f43292c63897423277bb7f4313a9 # v8
        with:
          version: ${{ env.GOLANGCI_LINT_VERSION }}
      - name: Run go tests
        run: go test -v ./...
  docker:
    name: Docker
    runs-on: ubuntu-latest
    needs:
      - 'tests'
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3
      - name: Log in to the Container registry
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build test image
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6
        with:
          load: true
          tags: ${{ env.TEST_TAG }}
          cache-from: type=gha
      - name: Validate Container
        id: validate
        run: |
          docker run --rm -i --entrypoint sh ${{ env.TEST_TAG }} < ci/validate.sh
      - name: Extract metadata (tags, labels) for Docker
        if: ${{ github.ref == 'refs/heads/main' }}
        id: meta
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f # v5
        with:
          images: ${{ env.IMAGE }}
          tags: type=raw,value=latest
      - name: Build and push image
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
